<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>jee9.1</artifactId>
        <groupId>fr.univtln.bruno.samples.jee91</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>utils</artifactId>
    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>keytool-maven-plugin</artifactId>
                <version>1.5</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <id>generateKeyPair</id>
                        <goals>
                            <goal>generateKeyPair</goal>
                        </goals>
                        <configuration>
                            <skipIfExist>true</skipIfExist>
                            <keyalg>RSA</keyalg>
                            <keystore>${project.basedir}/src/main/resources/mycert.p12</keystore>
                            <storetype>PKCS12</storetype>
                        </configuration>
                    </execution>
                    <execution>
                        <phase>generate-resources</phase>
                        <id>generateCertificateRequest</id>
                        <goals>
                            <goal>generateCertificateRequest</goal>
                        </goals>
                        <configuration>
                            <file>${project.basedir}/src/main/resources/mycert.csr</file>
                            <keystore>${project.basedir}/src/main/resources/mycert.p12</keystore>
                            <storetype>PKCS12</storetype>
                        </configuration>
                    </execution>
                    <execution>
                        <phase>generate-resources</phase>
                        <id>generateCertificate</id>
                        <goals>
                            <goal>generateCertificate</goal>
                        </goals>
                        <configuration>
                            <keystore>${project.basedir}/src/main/resources/mycert.p12</keystore>
                            <storetype>PKCS12</storetype>
                            <infile>${project.basedir}/src/main/resources/mycert.csr</infile>
                            <outfile>${project.basedir}/src/main/resources/mycert.crt</outfile>
                            <rfc>true</rfc>
                            <validity>100</validity>
                            <sigalg>SHA256withRSA</sigalg>
                        </configuration>
                    </execution>
                    <execution>
                        <goals>
                            <goal>exportCertificate</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <file>${project.basedir}/src/main/resources/mycert-pub.cer</file>
                            <keystore>${project.basedir}/src/main/resources/mycert.p12</keystore>
                            <storetype>PKCS12</storetype>
                            <rfc>true</rfc>
                        </configuration>
                    </execution>
                    <execution>
                        <id>importCertificate</id>
                        <goals>
                            <goal>importCertificate</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <keystore>${project.basedir}/src/main/resources/mycert-pub.p12</keystore>
                            <storetype>PKCS12</storetype>
                            <file>${project.basedir}/src/main/resources/mycert-pub.cer</file>
                            <trustcacerts>true</trustcacerts>
                            <noprompt>true</noprompt>
                            <passwordProtected>false</passwordProtected>
                            <skipIfExist>true</skipIfExist>
                        </configuration>
                    </execution>
                </executions>

                <configuration>
                    <storepass>storepass</storepass>
                    <keypass>storepass</keypass>
                    <alias>mycert</alias>
                    <dname>cn=localhost</dname>
                </configuration>

            </plugin>
        </plugins>
    </build>

</project>